<?php
/**
 * Created by LazyCrud - @DyanGalih <dyan.galih@gmail.com>
 */
namespace DummyNamespace;

use App\Requests\DummyClassRequest;
use App\Services\DummyClassService;
use App\Services\Requests\DummyClassServiceRequest;
use WebAppId\DDD\Controllers\BaseController;
use WebAppId\DDD\Tools\Lazy;
use WebAppId\SmartResponse\Response;
use WebAppId\SmartResponse\SmartResponse;
InjectUse

/**
 * @author: DummyAuthor
 * Date: DummyDate
 * Time: DummyTime
 * Class DummyClassUpdateController
 * @package DummyNamespace
 */
class DummyClassUpdateController extends BaseController
{
    public function __invoke(int $id,
                             DummyClassRequest $dummyClassRequest,
                             DummyClassServiceRequest $dummyClassServiceRequest,
                             DummyClassService $dummyClassService,
                             SmartResponse $smartResponse,
                             Response $response)
    {
        $dummyClassValidated = $dummyClassRequest->validated();

        $dummyClassServiceRequest = Lazy::copyFromArray($dummyClassValidated, $dummyClassServiceRequest, Lazy::AUTOCAST);

        InjectData
        $result = $this->container->call([$dummyClassService, 'update'], ['id' => $id, 'dummyClassServiceRequest' => $dummyClassServiceRequest]);

        if ($result->isStatus()) {
            $response->setData($result->dummyClass);
            return $smartResponse->saveDataSuccess($response);
        } else {
            return $smartResponse->saveDataFailed($response);
        }
    }
}
